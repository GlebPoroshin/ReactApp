"use strict";(()=>{var e={};e.id=495,e.ids=[495],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4953:(e,s,t)=>{t.r(s),t.d(s,{originalPathname:()=>l,patchFetch:()=>m,requestAsyncStorage:()=>p,routeModule:()=>u,serverHooks:()=>d,staticGenerationAsyncStorage:()=>c});var r={};t.r(r),t.d(r,{POST:()=>i});var a=t(9303),o=t(8716),n=t(670);async function i(e){try{let{task:s,action:t,timestamp:r}=await e.json();return await new Promise(e=>setTimeout(e,500)),console.log(`[${r}] Task ${t}:`,s),Response.json({success:!0,message:`Task ${t} successful`,taskId:s.id,timestamp:new Date().toISOString()})}catch(e){return console.error("API Error:",e),Response.json({success:!1,message:"Internal server error"},{status:500})}}let u=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/tasks/route",pathname:"/api/tasks",filename:"route",bundlePath:"app/api/tasks/route"},resolvedPagePath:"/Users/glebporosin/Университет/TaskTreckerReact/task-tracker/app/api/tasks/route.js",nextConfigOutput:"",userland:r}),{requestAsyncStorage:p,staticGenerationAsyncStorage:c,serverHooks:d}=u,l="/api/tasks/route";function m(){return(0,n.patchFetch)({serverHooks:d,staticGenerationAsyncStorage:c})}},9303:(e,s,t)=>{e.exports=t(517)}};var s=require("../../../webpack-runtime.js");s.C(e);var t=e=>s(s.s=e),r=s.X(0,[948],()=>t(4953));module.exports=r})();